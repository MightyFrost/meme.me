[{"/home/frost/mememe/src/index.js":"1","/home/frost/mememe/src/App.js":"2","/home/frost/mememe/src/reportWebVitals.js":"3","/home/frost/mememe/src/components/shareTo.jsx":"4","/home/frost/mememe/src/components/submitMeme.jsx":"5","/home/frost/mememe/src/components/memeUi.jsx":"6","/home/frost/mememe/src/components/dropDown.jsx":"7","/home/frost/mememe/src/components/inputField.jsx":"8"},{"size":594,"mtime":1608063233987,"results":"9","hashOfConfig":"10"},{"size":426,"mtime":1608649985609,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607947488588,"results":"12","hashOfConfig":"10"},{"size":740,"mtime":1608235347133,"results":"13","hashOfConfig":"10"},{"size":1668,"mtime":1608655990480,"results":"14","hashOfConfig":"10"},{"size":420,"mtime":1608297336184,"results":"15","hashOfConfig":"10"},{"size":1999,"mtime":1608583891594,"results":"16","hashOfConfig":"10"},{"size":1761,"mtime":1608655794036,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"qa4kw9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/frost/mememe/src/index.js",["39","40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport shareTo from './components/shareTo';\nimport submitMeme from './components/submitMeme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["41","42"],"/home/frost/mememe/src/App.js",["43","44","45","46","47"],"/home/frost/mememe/src/reportWebVitals.js",[],"/home/frost/mememe/src/components/shareTo.jsx",["48"],"import React, { Component } from 'react';\n\nclass ShareTo extends Component {\n    state = {  }\n\n\n    render() { \n        return (\n            <React.Fragment>\n                <div className=\"submit\">\n            <div className=\"share-btn\" class=\"fb-share-button\" data-href=\"http://localhost:3000/\" data-layout=\"button\" data-size=\"small\"><a target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Flocalhost%3A3000%2F&amp;src=sdkpreparse\" class=\"fb-xfbml-parse-ignore\">Share</a></div>\n            <a className=\"share-btn\" href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" class=\"twitter-share-button\" data-show-count=\"false\">Tweet</a>\n            </div>\n</React.Fragment>\n        );\n    }\n}\n \nexport default ShareTo;","/home/frost/mememe/src/components/submitMeme.jsx",["49"],"/home/frost/mememe/src/components/memeUi.jsx",["50"],"import React, { Component } from \"react\";\nimport DropDown from \"./dropDown\";\nimport ShareTo from \"./shareTo\";\nimport SubmitMeme from \"./submitMeme\";\n\nclass MemeUi extends React.Component {\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <div className=\"memeGen\">\n          <DropDown />\n          <SubmitMeme />\n          <ShareTo />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MemeUi;\n","/home/frost/mememe/src/components/dropDown.jsx",["51","52","53"],"import Axios from 'axios';\nimport React from 'react';\nimport Select from 'react-select';\nimport RenderBox from './inputField';\nimport SubmitMeme from './submitMeme';\n\nclass DropDown extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedOption: null,\n            selectOptions: [],\n            id: '',\n            name: '',\n            url: '',\n            box_count: ''\n        }\n    }\n\n    async getOptions() {\n        const res = await Axios.get('https://api.imgflip.com/get_memes');\n        const data = res.data;\n\n        const options = data.data.memes.map(d => ({\n            \"value\": d.id,\n            \"label\": d.name,\n            \"url\": d.url,\n            \"box_count\": d.box_count\n        }))\n        this.setState({ selectOptions: options });\n        console.log(options);\n    }\n\n    componentDidMount() {\n        this.getOptions();\n    }\n\n    handleChange(e) {\n        this.setState({ id: e.value, name: e.label, url: e.url, box_count: e.box_count })\n    }\n\n    render() {\n        const { selectOptions, id, name, url, box_count } = this.state;\n        console.log(selectOptions);\n        const displayCount = () => {\n            if (box_count <= 0) {\n                return <p>No meme selected.</p>\n            }\n            else { return <p>The box count is {box_count}.</p> }\n        }\n        return (\n            <React.Fragment>\n                <div className=\"display, display-content\">\n                    <Select\n                        onChange={this.handleChange.bind(this)}\n                        options={selectOptions}\n                        placeholder=\"Select a template\"\n                    />\n                    <img className=\"img-size\" src={url} ></img>\n                    {displayCount()}\n                </div>\n                <RenderBox boxCount={box_count} />\n                <SubmitMeme boxCount={box_count} />\n            </React.Fragment>\n            \n        );\n    }\n}\n\n\nexport default DropDown;","/home/frost/mememe/src/components/inputField.jsx",["54","55","56"],{"ruleId":"57","severity":1,"message":"58","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":15},{"ruleId":"57","severity":1,"message":"61","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":18},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"57","severity":1,"message":"66","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"67","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"68","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":18},{"ruleId":"57","severity":1,"message":"69","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":15},{"ruleId":"57","severity":1,"message":"70","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":11,"column":141,"nodeType":"73","endLine":11,"endColumn":156},{"ruleId":"57","severity":1,"message":"74","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"66","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"75","line":43,"column":32,"nodeType":"59","messageId":"60","endLine":43,"endColumn":34},{"ruleId":"57","severity":1,"message":"76","line":43,"column":36,"nodeType":"59","messageId":"60","endLine":43,"endColumn":40},{"ruleId":"77","severity":1,"message":"78","line":59,"column":21,"nodeType":"79","endLine":59,"endColumn":58},{"ruleId":"57","severity":1,"message":"66","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"74","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"80","line":7,"column":7,"nodeType":"59","messageId":"60","endLine":7,"endColumn":16},"no-unused-vars","'shareTo' is defined but never used.","Identifier","unusedVar","'submitMeme' is defined but never used.","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"'Component' is defined but never used.","'logo' is defined but never used.","'SubmitMeme' is defined but never used.","'ShareTo' is defined but never used.","'InputField' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'DropDown' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]